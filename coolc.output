

Terminals which are not used:

   LBRACE
   RBRACE
   EQUAL
   PLUS
   MINUS



Grammar
rule 1    program -> c_list
rule 2    c_list -> class SEMICOLON
rule 3    c_list -> c_list class SEMICOLON
rule 4    class -> feature_list END
rule 5    feature_list -> CLASS TYPEID IS
rule 6    feature_list -> feature_list feature SEMICOLON
rule 7    @1 ->		/* empty */
rule 8    feature -> ID LPAREN formal_list RPAREN DOTS TYPEID IS @1 expr_list END
rule 9    feature -> ID DOTS TYPEID
rule 10   feature -> ID DOTS TYPEID ASSIGN expr
rule 11   formal_list -> formal_list formal
rule 12   formal_list -> formal_list formal COLON
rule 13   formal_list ->		/* empty */
rule 14   formal -> ID DOTS TYPEID
rule 15   expr -> ID ASSIGN expr
rule 16   expr -> ID DOT ID LPAREN param_list RPAREN
rule 17   expr -> IF expr THEN expr ELSE expr FI
rule 18   expr -> WHILE expr LOOP expr POOL
rule 19   expr -> BBEGIN expr_list END
rule 20   expr -> NOT expr
rule 21   expr -> ID
rule 22   expr -> NUMBER
rule 23   expr -> TRUE
rule 24   expr -> FALSE
rule 25   expr -> PRINT STRING
rule 26   param_list -> param_list expr
rule 27   param_list -> param_list expr COLON
rule 28   param_list ->		/* empty */
rule 29   expr_list -> expr SEMICOLON
rule 30   expr_list -> expr_list expr SEMICOLON

Terminals, with rules where they appear

$ (-1)
error (256)
LPAREN (258) 8 16
RPAREN (259) 8 16
LBRACE (260)
RBRACE (261)
EQUAL (262)
NUMBER (263) 22
SEMICOLON (264) 2 3 6 29 30
DOTS (265) 8 9 10 14
COLON (266) 12 27
PLUS (267)
MINUS (268)
ASSIGN (269) 10 15
CLASS (270) 5
IS (271) 5 8
END (272) 4 8 19
TYPEID (273) 5 8 9 10 14
ID (274) 8 9 10 14 15 16 21
IF (275) 17
THEN (276) 17
ELSE (277) 17
FI (278) 17
WHILE (279) 18
LOOP (280) 18
POOL (281) 18
NOT (282) 20
BBEGIN (283) 19
DOT (284) 16
TRUE (285) 23
FALSE (286) 24
PRINT (287) 25
STRING (288) 25

Nonterminals, with rules where they appear

program (34)
    on left: 1
c_list (35)
    on left: 2 3, on right: 1 3
class (36)
    on left: 4, on right: 2 3
feature_list (37)
    on left: 5 6, on right: 4 6
feature (38)
    on left: 8 9 10, on right: 6
@1 (39)
    on left: 7, on right: 8
formal_list (40)
    on left: 11 12 13, on right: 8 11 12
formal (41)
    on left: 14, on right: 11 12
expr (42)
    on left: 15 16 17 18 19 20 21 22 23 24 25, on right: 10 15 17 18
    20 26 27 29 30
param_list (43)
    on left: 26 27 28, on right: 16 26 27
expr_list (44)
    on left: 29 30, on right: 8 19 30


state 0

    CLASS	shift, and go to state 1

    program	go to state 68
    c_list	go to state 2
    class	go to state 3
    feature_list	go to state 4



state 1

    feature_list  ->  CLASS . TYPEID IS   (rule 5)

    TYPEID	shift, and go to state 5



state 2

    program  ->  c_list .   (rule 1)
    c_list  ->  c_list . class SEMICOLON   (rule 3)

    CLASS	shift, and go to state 1

    $default	reduce using rule 1 (program)

    class	go to state 6
    feature_list	go to state 4



state 3

    c_list  ->  class . SEMICOLON   (rule 2)

    SEMICOLON	shift, and go to state 7



state 4

    class  ->  feature_list . END   (rule 4)
    feature_list  ->  feature_list . feature SEMICOLON   (rule 6)

    END 	shift, and go to state 8
    ID  	shift, and go to state 9

    feature	go to state 10



state 5

    feature_list  ->  CLASS TYPEID . IS   (rule 5)

    IS  	shift, and go to state 11



state 6

    c_list  ->  c_list class . SEMICOLON   (rule 3)

    SEMICOLON	shift, and go to state 12



state 7

    c_list  ->  class SEMICOLON .   (rule 2)

    $default	reduce using rule 2 (c_list)



state 8

    class  ->  feature_list END .   (rule 4)

    $default	reduce using rule 4 (class)



state 9

    feature  ->  ID . LPAREN formal_list RPAREN DOTS TYPEID IS @1 expr_list END   (rule 8)
    feature  ->  ID . DOTS TYPEID   (rule 9)
    feature  ->  ID . DOTS TYPEID ASSIGN expr   (rule 10)

    LPAREN	shift, and go to state 13
    DOTS	shift, and go to state 14



state 10

    feature_list  ->  feature_list feature . SEMICOLON   (rule 6)

    SEMICOLON	shift, and go to state 15



state 11

    feature_list  ->  CLASS TYPEID IS .   (rule 5)

    $default	reduce using rule 5 (feature_list)



state 12

    c_list  ->  c_list class SEMICOLON .   (rule 3)

    $default	reduce using rule 3 (c_list)



state 13

    feature  ->  ID LPAREN . formal_list RPAREN DOTS TYPEID IS @1 expr_list END   (rule 8)

    $default	reduce using rule 13 (formal_list)

    formal_list	go to state 16



state 14

    feature  ->  ID DOTS . TYPEID   (rule 9)
    feature  ->  ID DOTS . TYPEID ASSIGN expr   (rule 10)

    TYPEID	shift, and go to state 17



state 15

    feature_list  ->  feature_list feature SEMICOLON .   (rule 6)

    $default	reduce using rule 6 (feature_list)



state 16

    feature  ->  ID LPAREN formal_list . RPAREN DOTS TYPEID IS @1 expr_list END   (rule 8)
    formal_list  ->  formal_list . formal   (rule 11)
    formal_list  ->  formal_list . formal COLON   (rule 12)

    RPAREN	shift, and go to state 18
    ID  	shift, and go to state 19

    formal	go to state 20



state 17

    feature  ->  ID DOTS TYPEID .   (rule 9)
    feature  ->  ID DOTS TYPEID . ASSIGN expr   (rule 10)

    ASSIGN	shift, and go to state 21

    $default	reduce using rule 9 (feature)



state 18

    feature  ->  ID LPAREN formal_list RPAREN . DOTS TYPEID IS @1 expr_list END   (rule 8)

    DOTS	shift, and go to state 22



state 19

    formal  ->  ID . DOTS TYPEID   (rule 14)

    DOTS	shift, and go to state 23



state 20

    formal_list  ->  formal_list formal .   (rule 11)
    formal_list  ->  formal_list formal . COLON   (rule 12)

    COLON	shift, and go to state 24

    $default	reduce using rule 11 (formal_list)



state 21

    feature  ->  ID DOTS TYPEID ASSIGN . expr   (rule 10)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 34



state 22

    feature  ->  ID LPAREN formal_list RPAREN DOTS . TYPEID IS @1 expr_list END   (rule 8)

    TYPEID	shift, and go to state 35



state 23

    formal  ->  ID DOTS . TYPEID   (rule 14)

    TYPEID	shift, and go to state 36



state 24

    formal_list  ->  formal_list formal COLON .   (rule 12)

    $default	reduce using rule 12 (formal_list)



state 25

    expr  ->  NUMBER .   (rule 22)

    $default	reduce using rule 22 (expr)



state 26

    expr  ->  ID . ASSIGN expr   (rule 15)
    expr  ->  ID . DOT ID LPAREN param_list RPAREN   (rule 16)
    expr  ->  ID .   (rule 21)

    ASSIGN	shift, and go to state 37
    DOT 	shift, and go to state 38

    $default	reduce using rule 21 (expr)



state 27

    expr  ->  IF . expr THEN expr ELSE expr FI   (rule 17)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 39



state 28

    expr  ->  WHILE . expr LOOP expr POOL   (rule 18)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 40



state 29

    expr  ->  NOT . expr   (rule 20)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 41



state 30

    expr  ->  BBEGIN . expr_list END   (rule 19)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 42
    expr_list	go to state 43



state 31

    expr  ->  TRUE .   (rule 23)

    $default	reduce using rule 23 (expr)



state 32

    expr  ->  FALSE .   (rule 24)

    $default	reduce using rule 24 (expr)



state 33

    expr  ->  PRINT . STRING   (rule 25)

    STRING	shift, and go to state 44



state 34

    feature  ->  ID DOTS TYPEID ASSIGN expr .   (rule 10)

    $default	reduce using rule 10 (feature)



state 35

    feature  ->  ID LPAREN formal_list RPAREN DOTS TYPEID . IS @1 expr_list END   (rule 8)

    IS  	shift, and go to state 45



state 36

    formal  ->  ID DOTS TYPEID .   (rule 14)

    $default	reduce using rule 14 (formal)



state 37

    expr  ->  ID ASSIGN . expr   (rule 15)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 46



state 38

    expr  ->  ID DOT . ID LPAREN param_list RPAREN   (rule 16)

    ID  	shift, and go to state 47



state 39

    expr  ->  IF expr . THEN expr ELSE expr FI   (rule 17)

    THEN	shift, and go to state 48



state 40

    expr  ->  WHILE expr . LOOP expr POOL   (rule 18)

    LOOP	shift, and go to state 49



state 41

    expr  ->  NOT expr .   (rule 20)

    $default	reduce using rule 20 (expr)



state 42

    expr_list  ->  expr . SEMICOLON   (rule 29)

    SEMICOLON	shift, and go to state 50



state 43

    expr  ->  BBEGIN expr_list . END   (rule 19)
    expr_list  ->  expr_list . expr SEMICOLON   (rule 30)

    NUMBER	shift, and go to state 25
    END 	shift, and go to state 51
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 52



state 44

    expr  ->  PRINT STRING .   (rule 25)

    $default	reduce using rule 25 (expr)



state 45

    feature  ->  ID LPAREN formal_list RPAREN DOTS TYPEID IS . @1 expr_list END   (rule 8)

    $default	reduce using rule 7 (@1)

    @1  	go to state 53



state 46

    expr  ->  ID ASSIGN expr .   (rule 15)

    $default	reduce using rule 15 (expr)



state 47

    expr  ->  ID DOT ID . LPAREN param_list RPAREN   (rule 16)

    LPAREN	shift, and go to state 54



state 48

    expr  ->  IF expr THEN . expr ELSE expr FI   (rule 17)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 55



state 49

    expr  ->  WHILE expr LOOP . expr POOL   (rule 18)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 56



state 50

    expr_list  ->  expr SEMICOLON .   (rule 29)

    $default	reduce using rule 29 (expr_list)



state 51

    expr  ->  BBEGIN expr_list END .   (rule 19)

    $default	reduce using rule 19 (expr)



state 52

    expr_list  ->  expr_list expr . SEMICOLON   (rule 30)

    SEMICOLON	shift, and go to state 57



state 53

    feature  ->  ID LPAREN formal_list RPAREN DOTS TYPEID IS @1 . expr_list END   (rule 8)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 42
    expr_list	go to state 58



state 54

    expr  ->  ID DOT ID LPAREN . param_list RPAREN   (rule 16)

    $default	reduce using rule 28 (param_list)

    param_list	go to state 59



state 55

    expr  ->  IF expr THEN expr . ELSE expr FI   (rule 17)

    ELSE	shift, and go to state 60



state 56

    expr  ->  WHILE expr LOOP expr . POOL   (rule 18)

    POOL	shift, and go to state 61



state 57

    expr_list  ->  expr_list expr SEMICOLON .   (rule 30)

    $default	reduce using rule 30 (expr_list)



state 58

    feature  ->  ID LPAREN formal_list RPAREN DOTS TYPEID IS @1 expr_list . END   (rule 8)
    expr_list  ->  expr_list . expr SEMICOLON   (rule 30)

    NUMBER	shift, and go to state 25
    END 	shift, and go to state 62
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 52



state 59

    expr  ->  ID DOT ID LPAREN param_list . RPAREN   (rule 16)
    param_list  ->  param_list . expr   (rule 26)
    param_list  ->  param_list . expr COLON   (rule 27)

    RPAREN	shift, and go to state 63
    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 64



state 60

    expr  ->  IF expr THEN expr ELSE . expr FI   (rule 17)

    NUMBER	shift, and go to state 25
    ID  	shift, and go to state 26
    IF  	shift, and go to state 27
    WHILE	shift, and go to state 28
    NOT 	shift, and go to state 29
    BBEGIN	shift, and go to state 30
    TRUE	shift, and go to state 31
    FALSE	shift, and go to state 32
    PRINT	shift, and go to state 33

    expr	go to state 65



state 61

    expr  ->  WHILE expr LOOP expr POOL .   (rule 18)

    $default	reduce using rule 18 (expr)



state 62

    feature  ->  ID LPAREN formal_list RPAREN DOTS TYPEID IS @1 expr_list END .   (rule 8)

    $default	reduce using rule 8 (feature)



state 63

    expr  ->  ID DOT ID LPAREN param_list RPAREN .   (rule 16)

    $default	reduce using rule 16 (expr)



state 64

    param_list  ->  param_list expr .   (rule 26)
    param_list  ->  param_list expr . COLON   (rule 27)

    COLON	shift, and go to state 66

    $default	reduce using rule 26 (param_list)



state 65

    expr  ->  IF expr THEN expr ELSE expr . FI   (rule 17)

    FI  	shift, and go to state 67



state 66

    param_list  ->  param_list expr COLON .   (rule 27)

    $default	reduce using rule 27 (param_list)



state 67

    expr  ->  IF expr THEN expr ELSE expr FI .   (rule 17)

    $default	reduce using rule 17 (expr)



state 68

    $   	go to state 69



state 69

    $   	go to state 70



state 70

    $default	accept
